Three states:
1. Pending
2. Fulfilled
3. Rejected

Exp:
1. To create a promise - new promise()
2 parameters
Resolve -- to mark the promise as successfull
Reject -- to mark the promise as failed

2. To handle result:
.then() for resolve()
.catch() for reject()
 
 // let promise = new Promise((resolve,reject)=>{
        //     let success = true;
        //     if(success){
        //         resolve();
        //     }
        //     else{
        //         reject();
        //     }
        // })

        // promise.then((resolve)=>{
        //     console.log("The operation is successfull");
        // })
        // .catch((reject)=>{
        //     console.log("The operation is failed");
        // })

        // async function abc() {
        // let x = await fetch("https://jsonplaceholder.typicode.com/posts/1");
        // let z = x; // Parsing the response as JSON
        // console.log(z); // Logs the response JSON object
        // }

        // abc();
        // let promise1 = new Promise((resolve,reject) =>{
        //     resolve(5);
        // })
        // promise1.then(result =>{
        //     document.write(result,"<br>");
        //     return result*2;
            
        // })
        // .then(result =>{
        //     document.write(result,"<br>");
        //     return result + 3;
            
        // })
        // .then(result =>{
        //     document.write(result,"<br>");
        // })
        // .catch(error =>{
        //     document.write("Error ",error);
        // })

        // console.log("ad");
        // setTimeout(()=>{
        //     console.log("ffsda");
        // })
        // console.log("awdfsf");
